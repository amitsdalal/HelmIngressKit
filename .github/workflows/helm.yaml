---
name: Auto Release Helm Chart

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write  # Allows pushing commits
  pages: write  # Allows updating GitHub Pages

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: latest

      - name: Set Chart Version from Git Tag
        run: |
          # Get the latest tag from Git, remove 'v' if it exists
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          LATEST_TAG=$(echo $LATEST_TAG | sed -E 's/^(v|HelmIngressKit-)//')

          # Split version into major, minor, patch
          MAJOR=$(echo $LATEST_TAG | cut -d. -f1)
          MINOR=$(echo $LATEST_TAG | cut -d. -f2)
          PATCH=$(echo $LATEST_TAG | cut -d. -f3)

          # Auto-increment the PATCH version
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"

          # Store in GitHub Actions environment
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

          # Update Chart.yaml with the new version
          sed -i "s/^version:.*/version: \"$NEW_VERSION\"/" charts/HelmIngressKit/Chart.yaml

          # Debugging: Print extracted version
          echo "Previous version: $LATEST_TAG"
          echo "New version: $NEW_VERSION"



      - name: Package Helm Chart
        run: |
          mkdir -p .cr-release-packages
          helm package charts/HelmIngressKit --destination .cr-release-packages
          ls -l .cr-release-packages  # Debugging: List the packaged files


      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Update GitHub Pages (`gh-pages`)
        run: |
          git fetch origin gh-pages
          git checkout gh-pages || git checkout --orphan gh-pages
          mkdir -p docs

          # Move newly packaged chart to `docs/`
          mv .cr-release-packages/*.tgz docs/

          # Ensure previous `index.yaml` exists before merging
          if [[ -f docs/index.yaml ]]; then
            helm repo index docs --url https://charts.amitdalal.com/ --merge docs/index.yaml
          else
            helm repo index docs --url https://charts.amitdalal.com/
          fi

          git add docs/
          git commit -m "Release HelmIngressKit v$VERSION"
          git push origin gh-pages


      - name: Debug GitHub Token
        run: |
          if [[ -z "${{ secrets.GITHUB_TOKEN }}" ]]; then
            echo "GITHUB_TOKEN is NOT available!"
            exit 1
          else
            echo "GITHUB_TOKEN is set!"
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          name: "HelmIngressKit ${{ env.VERSION }}"
          body: "Automated Helm Chart release v${{ env.VERSION }}"
          draft: false
          prerelease: false
          files: .cr-release-packages/HelmIngressKit-*.tgz
